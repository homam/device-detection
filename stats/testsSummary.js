// Generated by LiveScript 1.2.0
(function(){
  var ref$, Obj, map, filter, find, fold, foldr, fold1, all, flatten, sum, groupBy, objToPairs, partition, join, unique, request, requestJson;
  ref$ = require('prelude-ls'), Obj = ref$.Obj, map = ref$.map, filter = ref$.filter, find = ref$.find, fold = ref$.fold, foldr = ref$.foldr, fold1 = ref$.fold1, all = ref$.all, flatten = ref$.flatten, sum = ref$.sum, groupBy = ref$.groupBy, objToPairs = ref$.objToPairs, partition = ref$.partition, join = ref$.join, unique = ref$.unique;
  request = require('request');
  requestJson = curry$(function(url, callback){
    return request(url, function(arg$, arg1$, body){
      return callback(JSON.parse(body));
    });
  });
  requestJson("http://mobitransapi.mozook.com/devicetestingservice.svc/json/GetTestsSummary?status=Active", function(raw){
    var r;
    return console.log((function(){
      var i$, ref$, len$, results$ = [];
      for (i$ = 0, len$ = (ref$ = raw).length; i$ < len$; ++i$) {
        r = ref$[i$];
        results$.push({
          id: r.Test_ID,
          start: r.StartDate,
          end: r.EndDate,
          device: r.device,
          status: r.Status,
          visits: r.Visits
        });
      }
      return results$;
    }()));
  });
  function curry$(f, bound){
    var context,
    _curry = function(args) {
      return f.length > 1 ? function(){
        var params = args ? args.concat() : [];
        context = bound ? context || this : this;
        return params.push.apply(params, arguments) <
            f.length && arguments.length ?
          _curry.call(context, params) : f.apply(context, params);
      } : f;
    };
    return _curry();
  }
}).call(this);
